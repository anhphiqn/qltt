<?php  $identity = Zend_Auth::getInstance()->getIdentity();
               if(!empty($identity)){
//                    $this->model->setSys_Department_Id($identity->sys_department_id);
//                    $this->model->setSys_User_Id($identity->id);
                }
?>
<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header">Tạo mới xử lý vi phạm cho <?php 
                                                        $type = "Doanh nghiệp";
                                                        if($this->type_business == GlobalLib::_HKD)
                                                        {
                                                            $type = "Hộ kinh doanh";
                                                        }else if($this->type_business == GlobalLib::_DNNDB)
                                                        {
                                                             $type = "Doanh nghiệp ngoài địa bàn";
                                                        }
                                                        echo $type;
                                                        ?>
        </h3>      
    </div>    
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">      
                      <div class="panel-heading">
                 <div class="form-group">
                                <div class="row">
                                    <div class="col-lg-2">
                                        <label>Phòng xử lý: </label>
                                    </div>
                                    <div class="col-lg-3">
                                        <div id="jqxWidget" >
                                            <div id="dropDownButton">
                                                <div style="border: none;" id="jqxTree" >
                                                    <ul>
                                                        <?php echo GlobalLib::returntree($identity->sys_department_id) ;?>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                         
                                    </div>
                                    <div class="col-lg-2">
                                        <label>Nhân viên xử lý: </label>
                                    </div>
                                    <div class="col-lg-3">
                                        <?php 
                                       
                                           echo GlobalLib::getComboVersatile('sys_user_id', 'sys_user', 'id', 'first_name,last_name', $identity->id, false, 'form-control', '', 'where sys_department_id="'.$identity->sys_department_id.'"', '', 'Chọn người dùng',' ','');
                                       
                                            ?>
                                     
                                           
                                             
                                        </div>
                                   
                                          
                                    </div>   
                   
                 </div>
                              <div class="form-group">
                                <div class="row">
                                            <div class="col-lg-2">
                                        <label>Ngày xử lý:</label>
                                    </div>
                                    <div class="col-lg-3">
                                        <div id='jqxDateTimeIndex'>
                                                         </div>
                                        </div>
                                         
                                    </div> 
                                </div>
                            </div>
                      </div>
            
                <div class="panel-body">
                  <div class="table-reponsive">
                    <div id="jqxgrid">

                    </div>
                 
                <div style="font-size: 13px; margin-top: 20px; font-family: Verdana, Geneva, 'DejaVu Sans', sans-serif;" id="eventLog"></div>
                <!-- popup item-->
                
                </div>
            </div>
            <!-- form Số tiền nop phat -->
                <div style="visibility: hidden;" id="jqxWidget">
                     <div id="popupWindowAmount" hidden="true">
                        <div>
                                <b>Nhập Số tiền phạt !</b>
                        </div>
                        <div>
                            <div class="panel-body">
                                <div class="row">
                                        
                                             <div class="form-group">
                                           
                                            <div class="row">
                                                <div class="col-lg-8">
                                                     <input placeholder="Nhập số tiền phạt" type="text" class="form-control" id="amount" value=""/>
                                                </div>
                                            </div>
                                            </div>  
                                            
                                        <!--</form>--> 
                                     <!--<form method="POST" action="<?php //echo $this->baseUrl()?>/dafault/district/excel">-->
                                        <div class="row">
                                             <div class="col-lg-3">
                                                   <!-- <input style="margin-right: 5px;" type="button" id="btn_SaveAmount" value="Save" /> -->
                                                   <button class="btn btn-primary" name="submit" id="btn_SaveAmount">Lưu</button>
                                            </div></div>
                     
                                </div>
                             </div>
                      </div>
                        </div>
    </div>
             <!-- form tich thu hàng hóa -->
                <div style="visibility: hidden;" id="jqxWidget">
                     <div id="popupWindowItems" hidden="true">
                        <div>
                                <b>Tịch thu tang vật !</b>
                        </div>
                        <div>
                            <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-10">

                                            <div class="form-group">
                                                <div class="row">
                                                     <div class="col-lg-2">
                                                        <label>Tên tang vật(*)</label>
                                                    </div>
                                                    <div class="col-lg-3">
                                                        <?php echo GlobalLib::getComboSeclect('master_items_id', 'master_items'
                                                                                            , 'id', 'name', 0, false, '', '', '','Chọn tang vật');
                                                        ?>
                                                       
                                                    </div>
                                                     <div class="col-lg-1"></div>
                                                    <div class="col-lg-2">
                                                        <label>Số biên lai tịch thu tang vật(*)</label>
                                                    </div>
                                                   
                                                    <div class="col-lg-3">
                                                        <input  placeholder="Nhập số biên lai ..." class="form-control" id="serial_handling" value="">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="row">
                                                     <div class="col-lg-2">
                                                        <label>Số lượng tang vật bị tịch thu(*)</label>
                                                    </div>
                                                    <div class="col-lg-2">
                                                        <input placeholder="Nhập số lượng tang vật ..." class="form-control" id="quantity_commodity" value="">
                                                    </div>
                                                    <div class="col-lg-1">
                                                         <?php echo GlobalLib::getComboSeclect('master_unit_id', 'master_unit'
                                                                                            , 'id', 'name', 0, false, '', '', '','Chọn đơn vị');
                                                        ?>
                                                    </div>

                                                </div>
                                            </div>

                                              <div class="form-group">
                                                <div class="row">
                                                      <div class="col-lg-2">
                                                        <label>Hình thức xử lý(*)</label>
                                                    </div>
                                                    
                                                    <div class="col-lg-3">
                                                        <?php // echo GlobalLib::getComboSeclect('master_sanction_id', 'master_sanction'
//                                                                                            , 'id', 'name', 0, false, 'where type ="'.GlobalLib::_TTHH.'"', '', '','Chọn hình thức xử lý');
                                                        ?>
                                                        <?php echo  GlobalLib::getComboVersatilee('master_sanction_id', 'master_sanction', 'id', 'type,name',0,false,'','','where type ="'.GlobalLib::_TTHH.'" or type ="'.GlobalLib::_TG.'"','', 'Hình thức xử lý','-','');?> 
                                                    </div>
                                                     <div class="col-lg-1"></div>
                                                    <div class="col-lg-2">
                                                        <label>Ngày xử lý(*)</label>
                                                    </div>
                                                    
                                                    <div class="col-lg-3">
                                                         <div id='jqxDateTimeInput'>
                                                         </div>
                                                    </div>       
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="row">
                                                     <div class="col-lg-2">
                                                        <label>Số tiền đấu thầu</label>
                                                    </div>
                                                    <div class="col-lg-3">
                                                        <input placeholder="Số tiền đấu thầu ..." class="form-control" id="amountItem" value="">
                                                    </div>
                                                     
<!--                                                    <div class="col-lg-2">
                                                        <label>Đính kèm file</label>
                                                    </div>
                                                    <div class="col-lg-3">
                                                         <div id="jqxFileUpload">
                                                        </div>
                                                    </div>       -->
                                                    

                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <button   id="addItems" class="btn btn-primary">Thêm</button>
                                                 <button  id="closeItems" class="btn btn-warning">Đóng</button>
                                            </div> 
                                    </div>
                                </div>
                            </div>
                        </div>
                            <div class="panel panel-default">
                            <div class="panel-body">
                                 <div id="jqxgrid_items">

                                </div>
                             </div>
                            </div>
                        </div>
                        </div>
                </div>
             
              <!-- form hành vi vi phạm -->
                <div style="visibility: hidden;" id="jqxWidget">
                     <div id="popupWindowItemsviolation" hidden="true">
                        <div>
                                <b>Hành vi vi phạm!</b>
                        </div>
                        <div>
                            <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="panel panel-default">
                            <div class="panel-body">
                                 <div id="jqxgrid_itemsviolation">

                                </div>
                             </div>
                            </div>
                                <div class="row">
                                    <div class="col-lg-10">
                                            <div class="form-group">
                                                <!--<button   id="addItemsviolation" class="btn btn-primary">Thêm</button>-->
<!--                                                 <button  id="closeItemsviolation" class="btn btn-warning">Đóng</button>-->
                                                    <button   id="saveViolation" name = "saveViolation" class="btn btn-primary">Lưu</button>
                                                     <!--<button   id="saveViolation1" class="btn btn-primary">Lưu1</button>-->
                                            </div> 
                                    </div>
                                </div>
                            </div>
                        </div>
                            
                        </div>
                        </div>
                </div>
             
             
             
             <!-- form ấn chỉ xử phạt -->
              <div style="visibility: hidden;" id="jqxWidget">
                        <div id="popupWindowPrint" hidden="true">
                              <div>
                                <b>Ấn chỉ xử lý !</b>
                              </div>
                             
                                <div>
                                    
                                    <div class="panel panel-default">             
                                        <div class="panel-heading">
                                               <div class="row">
                                             <div class="col-lg-3">
                                                <button   id="savePrint" class="btn btn-primary">Lưu</button>
                                            </div> 
                                               </div>
                                        </div>
                                        <div class="panel-body">
                                            <div id="jqxgrid_print">
                                            </div> 
                                        </div>
                                      
                                        
                                    </div>
                                </div>
                        </div>
                    </div>
</div>
</div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        
        <?php if($identity->is_leader != 1)
              {
                    echo "$('#sys_user_id').attr('disabled', true);";
              }
            ?>
         $("#dropDownButton").jqxDropDownButton({ width: 150, height: 29,theme: 'bootstrap'});
            $('#jqxTree').on('select', function (event) {
                var args = event.args;
                var item = $('#jqxTree').jqxTree('getItem', args.element);
                var dropDownContent = '<div style="position: relative; margin-left: 3px; margin-top: 8px;">' + item.label + '</div>';
                $("#dropDownButton").jqxDropDownButton('setContent', dropDownContent);
                 
                 $("#jqxTree").jqxTree({disabled:true});
             
            });
        $("#jqxTree").jqxTree({ width: 200, height: 220, theme: 'bootstrap',disabled:false});
  
        $('#master_items_id,#master_unit_id,#master_sanction_id,#sys_user_id').multiselect({
             maxwidth: '100%',
            maxHeight: '300',
            enableFiltering: true,
           
        });
         $("#jqxDateTimeInput,#jqxDateTimeIndex").jqxDateTimeInput({width: '100%', height: '34px',formatString: "dd-MM-yyyy"});
 //         $('#jqxFileUpload').jqxFileUpload({ width: '100%', uploadUrl: 'imageUpload.php', fileInputName: 'fileToUpload' });
          
     });
</script>
<script type="text/javascript">
$(document).ready(function () {
            var editrow = -1;
            var dataArray = new Array();
            var dataIdViolation = new Array();
            var arraySave = function (field,value,row) {
                 //Kiểm tra có ton tai row trong dataArray
                var valueRowId = $('#jqxgrid').jqxGrid('getrowid', row);
                if(dataArray.hasOwnProperty(row))
                {
                          dataArray[row]["rowId"]=valueRowId;
                          dataArray[row][field]=value;
                }
                 else
                 {
                     //Tạo key cho arrayData
                     var data = {
                         rowId: "",
                         info_business_id: "",
                         sanction_id: "",
                         violation_id: "",
                         amount: "",
                         array_items_handling: "",
//                         array_items_violation: "",
                         array_print_handling: ""
                        };
                     dataArray[row] = data;
                     dataArray[row]["rowId"]=valueRowId;
                     dataArray[row][field]=value;
                 }
            } 
            var arrayLoad = function (field,row) {
                 //Kiểm tra có ton tai row trong dataArray
                if(dataArray.hasOwnProperty(row))
                {
                          return dataArray[row][field];
                }
                return '';
            } 
            var sourceViolation = 
            {
                datatype: "json",
                datafields:
                [
                    { name: 'violation_id', type: 'string' },
                    { name: 'violation_name', type: 'string' },
                ],
                url:'<?php echo $this->baseUrl()?>/dafault/docviolationshandling/servicecombobox/type/violation',
                sortcolumn: 'name',
                sortdirection: 'asc',
            };
            var dataAdapterViolation = new $.jqx.dataAdapter(sourceViolation);
            var sourceSanction = 
            {
                datatype: "json",
                datafields:
                [
                    { name: 'sanction_id', type: 'string' },
                    { name: 'sanction_name', type: 'string' },
                ],
                url:'<?php echo $this->baseUrl()?>/dafault/docviolationshandling/servicecombobox/type/sanction',
                sortcolumn: 'name',
                sortdirection: 'asc',
            };
            var dataAdapterSanction = new $.jqx.dataAdapter(sourceSanction);
            var sourceBusiness =
            {
                datatype: "json",
                datafields:
                [
                    { name: 'business_id', type: 'string' },
                    { name: 'info_business_name', type: 'string' },
                     { name: 'address_office', type: 'string' }
                ],
                url:'<?php echo $this->baseUrl()?>/dafault/docviolationshandling/servicecombobox/type/business/type_business/<?php echo $this->type_business;?>',
                sortcolumn: 'info_business_name',
                sortdirection: 'asc',
                
            };
            var dataAdapterBusiness = new $.jqx.dataAdapter(sourceBusiness);
            var getSourceBusinessAdapter = function (value,row) {
                var fields = new Array();
                fields.push(name);
                //var dataAdapter = new $.jqx.dataAdapter(source, { autoBind: true, autoSort: true, uniqueDataFields: fields, autoSortField: name });
                    var dataAdapter1 = new $.jqx.dataAdapter(sourceBusiness,
                    {
                        beforeLoadComplete: function (records) {
                            
                            //var records = dataAdapter.records;
                            // get the length of the records array.
                            var length = records.length;
                            // loop through the records and display them in a table.
                           
                            for (var i = 0; i < length; i++) {
                                var record = records[i];
                                if(record.business_id == value)
                                {
                                      $("#jqxgrid").jqxGrid('setcellvalue', row, "address_office", record.address_office);
                                }
                            }
                           
                        }
                    });
                            dataAdapter1.dataBind();
            };
        $("#jqxgrid").jqxGrid(
            {
                width: '100%',
                editable: true,
                theme: 'bootstrap',
              
                //selectionmode: 'singlecell',
                //editmode: 'selectedrow',
                //source: gridAdapter,
                showtoolbar: true,
                //showeverpresentrow: true,
//                everpresentrowposition: "top",
//                everpresentrowactions: "add reset",
//                everpresentrowactionsmode: "columns",
               
                renderToolbar: function(toolBar)
                {
                    var toTheme = function (className) {
                        if (theme == "") return className;
                        return className + " " + className + "-" + theme;
                    }
                    // appends buttons to the status bar.
                    var container = $("<div style='overflow: hidden; position: relative; height: 100%; width: 100%;'></div>");
                    var buttonTemplate = "<div style='float: left; padding: 3px; margin: 2px;'><div style='margin: 4px; width: 16px; height: 16px;'></div></div>";
                    var addButton = $(buttonTemplate);
                    var cancelButton = $(buttonTemplate);
                    var updateButton = $(buttonTemplate);
                    container.append(addButton);
                    container.append(cancelButton);
                    container.append(updateButton);
                    toolBar.append(container);
                    addButton.jqxButton({cursor: "pointer", enableDefault: false,  height: 25, width: 25 });
                    addButton.find('div:first').addClass(toTheme('jqx-icon-plus'));
                    addButton.jqxTooltip({ position: 'bottom', content: "Add"});
                    updateButton.jqxButton({ cursor: "pointer", disabled: false, enableDefault: false,  height: 25, width: 25 });
                    updateButton.find('div:first').addClass(toTheme('jqx-icon-save'));
                    updateButton.jqxTooltip({ position: 'bottom', content: "Save Changes"});
                    cancelButton.jqxButton({ cursor: "pointer", disabled: false, enableDefault: false,  height: 25, width: 25 });
                    cancelButton.find('div:first').addClass(toTheme('jqx-icon-cancel'));
                    cancelButton.jqxTooltip({ position: 'bottom', content: "Clean"});
                    var rowIndex = null;
                    $("#jqxgrid").on('rowselect', function (event) 
                    {
                        // row's bound index.
                         rowIndex = event.args.rowindex;
                       
                    });
                    addButton.click(function (event) {
                        var rows = $('#jqxgrid').jqxGrid('getdisplayrows');
                        if(rows.length > 0)
                        {
                          var count = rows.length;
                          count--;
                          var valueBusiness = $('#jqxgrid').jqxGrid('getcellvalue', count, "business");
                          if(!valueBusiness || valueBusiness.length === 0 || valueBusiness == 0 )
                            {
                                  bootbox.alert("Vui lòng chọn tên doanh nghiệp, dòng thứ "+rows.length+" trước khi thêm dòng mới ");
                                  return false;
                            }
                            var valueViolation = $('#jqxgrid').jqxGrid('getcellvalue', count, "violation");
                          if(!valueViolation || valueViolation.length === 0 || valueViolation == 0 )
                            {
                                  bootbox.alert("Vui lòng chọn hành vi vi phạm, dòng thứ "+rows.length+" trước khi thêm dòng mới ");
                                  return false;
                            }
                            var valueSanction = $('#jqxgrid').jqxGrid('getcellvalue', count, "sanction");
                          if(!valueSanction || valueSanction.length === 0 || valueSanction == 0 )
                            {
                                  bootbox.alert("Vui lòng chọn hình thức xử lý, dòng thứ "+rows.length+" trước khi thêm dòng mới ");
                                  return false;
                            }
                             var valuePrintArray= arrayLoad('array_print_handling',count)
                            if(!valuePrintArray || 0 === valuePrintArray.length)
                            {
                                 bootbox.alert("Vui lòng nhập serial ấn chỉ xử phạt, dòng thứ "+rows.length+" trước khi thêm dòng mới ");
                                  return false;
                            }
                        }
                            $("#jqxgrid").jqxGrid('addRow', null, {});
                      
                            // select the first row and clear the selection.
                            $("#jqxgrid").jqxGrid('clearSelection');
                            //$("#jqxgrid").jqxGrid('selectRow', 0);
                            // edit the new row.
                            //$("#jqxgrid").jqxGrid('beginRowEdit', 0);
                            
                        
                    });
                    cancelButton.click(function (event) {
                        var valueRowId = $('#jqxgrid').jqxGrid('getrowid', rowIndex);
                        for(var i = dataArray.length - 1; i >= 0; i--) {
                                                if(dataArray[i]['rowId'] === valueRowId) {
                                                   //delete dataPrintArray[i];
                                                    dataArray.splice(i, 1);
                                                }
                                            }
                         $("#jqxgrid").jqxGrid('deleterow', valueRowId);
                            $("#jqxgrid").jqxGrid('addRow', null, {});
                        
                    });
                    updateButton.click(function (event) {
                         //var jsonString = JSON.stringify(dataArray);
                        
                         if(dataArray.length == 0)
                         {
                             return;
                         }
                        
                         $.ajax({
                                type:'post',
                                url:'<?php echo $this->baseUrl()?>/dafault/docviolationshandling/secvicesavehandling',
                                data: {'data' : dataArray, 'department': $("#jqxTree").val().id, 'user': $("#sys_user_id").val(),'date': $('#jqxDateTimeIndex').val()},
                                dataType:'json',
                                async:true,
                                //dataType:'json',
                                success:function(data){
                                    if(data[0].code==1){
                                        bootbox.alert(data[0].message);
                                        return false;
                                    } else {
                                         window.location=data[0].message;
                                    }
                                }
                            });
                    });
                    //bat dau edit
                     $("#jqxgrid").bind('cellbeginedit', function (event) {
                            var column = $("#jqxgrid").jqxGrid('getcolumn', event.args.datafield);
                            var row = event.args.rowindex;
                            var value = $("#jqxgrid").jqxGrid('getcellvalue', row, 'violation');
                            if((column.text == "Hành vi vi phạm")){
                                editrow = row;
                                violation_id = new Array();
                                $('#popupWindowItemsviolation').jqxWindow({
                                            showCollapseButton: true,theme: 'bootstrap',isModal: true,maxHeight: '50%', maxWidth: '80%',minHeight: '50%', minWidth: '80%',height: '50%', width: '80%',
                                            initContent: function () {
                                                $('#popupWindowItemsviolation').jqxWindow('focus');
                                            }
                                });
                                $("#popupWindowItemsviolation").jqxWindow('open');                                 
                               
                                
                            } 
                    });
                },
//                
                columns: [
                    
                    {
                        text: 'Tên <?php echo $type?>', datafield: 'business',displayfield: 'info_business_name', columntype: 'combobox',
                        createeditor: function (row, value, editor) {
                              editor.jqxComboBox({ source: dataAdapterBusiness,placeHolder: "Chọn doanh nghiệp", displayMember: 'info_business_name', valueMember: 'business_id' });
//                              editor.on('select',function(event){
//                                  //var value =  event.args.item.value;
//                                    //var add = getSourceBusinessAdapter(value);
//                                    $("#jqxgrid").jqxGrid('setcellvalue', row, 'address_office', 'value');
//                                    });
                               
                        },
                        cellvaluechanging: function (row, datafield, columntype, oldvalue, newvalue) {
                            if(typeof(newvalue.value) != "undefined")
                            {
                                 arraySave("info_business_id",newvalue.value,row);
                            }
                            if (newvalue != oldvalue) {
                                var office = getSourceBusinessAdapter(newvalue.value,row);
                            };
                        }
                       
                    },        
                    { 
                        text: 'Trụ sở chính',editable: false, datafield: 'address_office', width: '20%',columntype: 'combobox',
                        
                    },
//                    { 
//                        text: 'Hành vi vi phạm',editable: true, datafield: 'violation',displayfield: 'violation_name', width: '20%',columntype: 'combobox',
//                        createeditor: function (row, value, editor) {
//                            var value ;
//                              editor.jqxComboBox({ source: dataAdapterViolation,checkboxes: true, displayMember: 'violation_name', valueMember: 'violation_id' });
////                              editor.on('select',function(event){
////                                var value =  event.args.item.value;
////                                var add = getSourceBusinessAdapter(value);
////                                editor.jqxGrid('setcellvalue', row, 'violation_name', 'value');
////                                });
////                               
//                        },
//                        cellvaluechanging: function (row, datafield, columntype, oldvalue, newvalue) {
//                            if(typeof(newvalue.value) != "undefined")
//                            {
//                                arraySave("violation_id",newvalue.value,row);
//                            }
//                        }
//                       
//                    },
//                    {
//                      text: 'Hành vi vi phạm', columntype: 'template', datafield: 'violation',
//                      createeditor: function (row, cellvalue, editor, cellText, width, height) {
//                          // construct the editor. 
//                          editor.jqxDropDownList({
//                               source: dataAdapterViolation,checkboxes: true, displayMember: 'violation_name', valueMember: 'violation_id', width: width, height: height,theme: 'office', 
//                              selectionRenderer: function () {
//                                  return "Please Choose:";
//                              }
//                              
//                          });
//                      },
//                      initeditor: function (row, cellvalue, editor, cellText, pressedkey) {
//                          // set the editor's current value. The callback is called each time the editor is displayed.
//                          var items = editor.jqxDropDownList('getItems');
//                          editor.jqxDropDownList('uncheckAll');
//                          var values = cellvalue.split(/,\s*/);
//                          for (var j = 0; j < values.length; j++) {
//                              for (var i = 0; i < items.length; i++) {
//                                  if (items[i].label === values[j]) {
//                                      editor.jqxDropDownList('checkIndex', i);
//                                  }
//                              }
//                          }
//                         
//                      },
//                      geteditorvalue: function (row, cellvalue, editor) {
//                          // return the editor's value.
//                           var items = editor.jqxDropDownList('getCheckedItems'); 
//                                        var checkedItems = "";
//                                        $.each(items, function (index) {
//                                            checkedItems += this.label + ", "; 
//                                        });
////                                         alert(editor.val());
//                                        arraySave("violation_id",editor.val(),row);
//                                        return checkedItems;
//                           
////                          return editor.val();
////                           return editor.text("ghf");
//                      }
//                  },
                    ,
//                    { text: 'Hành vi vi phạm', datafield: 'violation', columntype: 'button',width: '10%', cellsrenderer: function () {
//                            return "Hành vi vi phạm";
//                        },
//                         buttonclick: function (row) {
//                            editrow = row;
//                            violation_id = new Array();
//                            $('#popupWindowItemsviolation').jqxWindow({
//                                            showCollapseButton: true,isModal: true,maxHeight: 500, maxWidth: 1000,minHeight: 500, minWidth: 1000,height: 500, width: 1000,
//                                            initContent: function () {
//                                                $('#popupWindowItemsviolation').jqxWindow('focus');
//                                            }
//                                              });
//                                    $("#popupWindowItemsviolation").jqxWindow('open');   
//                        }
//                    },
                    { text: 'Hành vi vi phạm', datafield: 'violation', width: '15%'
//                    ,cellsrenderer: function () {
//                            return "Hành vi vi phạm";
//                        },
//                         buttonclick: function (row) {
//                            editrow = row;
//                            violation_id = new Array();
//                            $('#popupWindowItemsviolation').jqxWindow({
//                                            showCollapseButton: true,isModal: true,maxHeight: 500, maxWidth: 1000,minHeight: 500, minWidth: 1000,height: 500, width: 1000,
//                                            initContent: function () {
//                                                $('#popupWindowItemsviolation').jqxWindow('focus');
//                                            }
//                                              });
//                                    $("#popupWindowItemsviolation").jqxWindow('open');   
//                        }
                    },
                    { 
                        text: 'Hình thức xử lý',editable: true, datafield: 'sanction',displayfield: 'sanction_name', width: '10%',columntype: 'combobox',
                        createeditor: function (row, value, editor) {
                              editor.jqxComboBox({ source: dataAdapterSanction, displayMember: 'sanction_name', valueMember: 'sanction_id' });
//                              editor.on('select',function(event){
//                                  //var value =  event.args.item.value;
//                                    //var add = getSourceBusinessAdapter(value);
//                                    $("#jqxgrid").jqxGrid('setcellvalue', row, 'address_office', 'value');
//                                    });
                        },
                        cellvaluechanging: function (row, datafield, columntype, oldvalue, newvalue) {
                            if(typeof(newvalue.value) != "undefined")
                            {
                                arraySave("sanction_id",newvalue.value,row);
                            }
                            if (newvalue.label == 'Phat tien' || newvalue.label == 'Phạt tiền' || newvalue.label == 'Phat Tien' || newvalue.label == 'Phạt Tiền') {
                                editrow = row;
                                var amountPhatTien = arrayLoad('amount',editrow)
                                if(!amountPhatTien || 0 === amountPhatTien.length)
                                {
                                    amountPhatTien = 0;
                                }
                                $("#amount").val(amountPhatTien);
                                var offset = $("#jqxgrid").offset();
                                  $('#popupWindowAmount').jqxWindow({
                                        showCollapseButton: true, maxHeight: 300, maxWidth: 500, minHeight: 200, minWidth: 200, height: 300, width: 500,
                                        initContent: function () {
                                            $('#popupWindowAmount').jqxWindow('focus');
                                        }
                                          });
                                $("#popupWindowAmount").jqxWindow('open');  
//                                 $("#jqxgrid").jqxGrid('clearselection');
                                
                            };
                        }
                    },
//                    { text: 'Hành vi vi phạm', datafield: 'violation', columntype: 'button',width: '10%', cellsrenderer: function () {
//                            return "Hành vi vi phạm";
//                        }, 
//                        buttonclick: function (row) {
//                            editrow = row;
//                            dataItemsArray = arrayLoad('array_items_violation',editrow)
//                            if(!dataItemsArray || 0 === dataItemsArray.length)
//                            {
//                                dataItemsArray = new Array();
//                            }
//                            
//                            refreshDataItem(dataItemsArray);
//                            $('#popupWindowItemsviolation').jqxWindow({
//                                            showCollapseButton: true,isModal: true,maxHeight: 500, maxWidth: 1000,minHeight: 500, minWidth: 1000,height: 500, width: 1000,
//                                            initContent: function () {
//                                                $('#popupWindowItemsviolation').jqxWindow('focus');
//                                            }
//                                              });
//                                    $("#popupWindowItemsviolation").jqxWindow('open');  
//                        }
//                    },
                    { text: 'Tịch thu tang vật', datafield: 'items', columntype: 'button',width: '10%', cellsrenderer: function () {
                            return "Tang vật";
                        }, 
                        buttonclick: function (row) {
                            editrow = row;
                            dataItemsArray = arrayLoad('array_items_handling',editrow)
                            if(!dataItemsArray || 0 === dataItemsArray.length)
                            {
                                dataItemsArray = new Array();
                            }
                            //
                            refreshDataItem(dataItemsArray);
                            $('#popupWindowItems').jqxWindow({
                                            showCollapseButton: true,maxHeight: 800, maxWidth: 1200,minHeight: 800, minWidth: 1200,height: 800, width: 1200,
                                            initContent: function () {
                                                $('#popupWindowItems').jqxWindow('focus');
                                            }
                                              });
                                    $("#popupWindowItems").jqxWindow('open');  
                        }
                    }
                    ,
                    { text: 'Ấn chỉ', datafield: 'print', columntype: 'button',width: '10%', cellsrenderer: function () {
                            return "Ấn chỉ";
                        },
                         buttonclick: function (row) {
                            editrow = row;
//                            dataPrintArray = arrayLoad('array_print_handling',editrow)
//                            if(!dataPrintArray || 0 === dataPrintArray.length)
//                            {
//                                dataPrintArray = new Array();
//                            }
//                            //
//                            refreshDataPrint(dataPrintArray);
                            dataPrintArray = new Array();
                            $('#popupWindowPrint').jqxWindow({
                                            showCollapseButton: true,maxHeight: 800, maxWidth: 1200,minHeight: 800, minWidth: 1200,height: 800, width: 1200,
                                            initContent: function () {
                                                $('#popupWindowPrint').jqxWindow('focus');
                                            }
                                              });
                                    $("#popupWindowPrint").jqxWindow('open');  
                        }
                    }
                ]
//                    
        });
      
 
 //Get Items
            var dataItemsArray = new Array();
            var arrayId = 0;
            var generatedata = function () {
                    var valueItemId = $("#master_items_id option:selected").val();
                    var valueSerialHandling = $("#serial_handling").val();
                   var valueQuantity = $("#quantity_commodity").val();
                    var valueUnit = $("#master_unit_id option:selected").val();
                    var valueSanction = $("#master_sanction_id option:selected").val();
                    if(!valueItemId || valueItemId.length === 0 || valueItemId == 0 )
                    {
                          bootbox.alert("Vui lòng chọn tang vật bị tịch thu! ");
                          return false;
                    }
                    if(!valueSerialHandling || valueSerialHandling.length === 0 || valueSerialHandling == 0 )
                    {
                          bootbox.alert("Vui lòng nhập số biên lai tịch thu tang vật! ");
                          return false;
                    }
                    if(!valueQuantity || valueQuantity.length === 0 || valueQuantity == 0 )
                    {
                          bootbox.alert("Vui lòng nhập số lượng tang vật bị tịch thu! ");
                          return false;
                    }
                    if(!valueSanction || valueSanction.length === 0 || valueSanction == 0 )
                    {
                          bootbox.alert("Vui lòng chọn hình thức xử lý! ");
                          return false;
                    }
//                    if((!valueUnit || valueUnit.length === 0))
//                    {
//                          bootbox.alert("Vui lòng chọn đơn vị! ");
//                          return false;
//                    }
                var text= $('#jqxDateTimeInput').jqxDateTimeInput('getText'); 
                dataItemsArray.push({
                     arrayId: arrayId++,
                     master_items_id: valueItemId,
                     master_items_name: $("#master_items_id option:selected").text(),
                     serial_handling: valueSerialHandling ,
                     quantity_commodity: valueQuantity,
                     master_unit_id: valueUnit,
                     master_unit_name:$("#master_unit_id option:selected").text(),
                     master_sanction_id: valueSanction,
                     master_sanction_name: $("#master_sanction_id option:selected").text(),
                     date_handling: text,
                     amountItem: $("#amountItem").val(),
                     file_upload:  ""
                 });
                 return true;
        }
        $("#closeItems").click(function () {
              $("#popupWindowItems").jqxWindow('close'); 
            });
//         $("#closeItemsviolation").click(function () {
//              $("#popupWindowItemsviolation").jqxWindow('close'); 
//            });    
        $('#popupWindowItems').on('close', function (event) { 
                if (editrow >= 0 && dataItemsArray.length > 0) {
                     arraySave("array_items_handling",dataItemsArray,editrow);
                }
                dataItemsArray = new Array();
        }); 
        $("#addItems").click(function () {
               if(generatedata())
               {
                    refreshDataItem(dataItemsArray);
               }
        });        
        var refreshDataItem = function (data) {
              var source = 
                {
                    datatype: "array",
                    localdata: data,
                    datafields:
                    [
                        { name: 'arrayId', type: 'int'},
                        { name: 'master_items_id', type: 'string'},
                        { name: 'master_items_name', type: 'string' },
                        { name: 'serial_handling', type: 'string' },
                        { name: 'quantity_commodity', type: 'string' },
                        { name: 'master_unit_id', type: 'string' },
                        { name: 'master_unit_name', type: 'string' },
                        { name: 'master_sanction_id', type: 'string' },
                        { name: 'master_sanction_name', type: 'string' },
                        { name: 'date_handling', type: 'string' },
                        { name: 'amountItem', type: 'string' },
                        { name: 'file_upload', type: 'string' }
                    ],

                    //sortcolumn: 'master_items_name',
                    //sortdirection: 'asc',
                };
               var dataAdapterItems = new $.jqx.dataAdapter(source);
               $('#jqxgrid_items').jqxGrid('clear');
                // passing "cells" to the 'updatebounddata' method will refresh only the cells values when the new rows count is equal to the previous rows count.
               $("#jqxgrid_items").jqxGrid({ source: dataAdapterItems });
         };
        $("#jqxgrid_items").jqxGrid(
            {
                width: '100%',
                editable: false,
                theme: 'bootstrap',
                
                //selectionmode: 'singlecell',
                //editmode: 'selectedrow',
                //source: dataAdapterItems,
                showtoolbar: true,
                //showeverpresentrow: true,
//                everpresentrowposition: "top",
//                everpresentrowactions: "add reset",
//                everpresentrowactionsmode: "columns",
                ready: function () {
                    $("#jqxgrid_items").jqxGrid('hideColumn', 'arrayId');
                },
                renderToolbar: function(toolBar)
                {
                    var toTheme = function (className) {
                        if (theme == "") return className;
                        return className + " " + className + "-" + theme;
                    }
                    // appends buttons to the status bar.
                    var container = $("<div style='overflow: hidden; position: relative; height: 100%; width: 100%;'></div>");
                    var buttonTemplate = "<div style='float: left; padding: 3px; margin: 2px;'><div style='margin: 4px; width: 16px; height: 16px;'></div></div>";
                    var deleteButton = $(buttonTemplate);                   
                    container.append(deleteButton);                   
                    toolBar.append(container);                    
                    deleteButton.jqxButton({ cursor: "pointer", disabled: false, enableDefault: false,  height: 25, width: 25 });
                    deleteButton.find('div:first').addClass(toTheme('jqx-icon-delete'));
                    deleteButton.jqxTooltip({ position: 'bottom', content: "Delete"});
                     var rowIndex = null;
                    $("#jqxgrid_items").on('rowselect', function (event) 
                    {
                        // row's bound index.
                         rowIndex = event.args.rowindex;
                       
                    });
                    deleteButton.click(function () {
                        var valueArrayId = $('#jqxgrid_items').jqxGrid('getcellvalue', rowIndex, "arrayId");
                            for(var i = dataItemsArray.length - 1; i >= 0; i--) {
                                                if(dataItemsArray[i]['arrayId'] === valueArrayId) {
                                                   //delete dataPrintArray[i];
                                                    dataItemsArray.splice(i, 1);
                                                }
                                            }
                           var valueRowId = $('#jqxgrid_items').jqxGrid('getrowid', rowIndex);
                            $("#jqxgrid_items").jqxGrid('deleterow', valueRowId);
                            
                        
                    });
                },
//                
                columns: [
                    {
                        text: 'arrayId', datafield: 'arrayId',displayfield: 'arrayId', width: '20%'
                      
                    },   
                    {
                        text: 'Tên tang vật', datafield: 'master_items_id',displayfield: 'master_items_name', width: '20%'
                      
                    },        
                    { 
                        text: 'Số biên lai tịch thu tang vật',editable: false, datafield: 'serial_handling', width: '10%'
                        
                    },
                    { 
                        text: 'Số lượng tang vật bị tịch thu',editable: true, datafield: 'quantity_commodity', width: '10%'
                      
                        
                    },
                    { 
                        text: 'Đơn vị',editable: true, datafield: 'master_unit_id',displayfield: 'master_unit_name', width: '10%'
                      
                        
                    },
                    { 
                        text: 'Hình thức xử lý',editable: true, datafield: 'master_sanction_id',displayfield: 'master_sanction_name', width: '10%'
                        
                    },
                    { 
                        text: 'Ngày xử lý',editable: true, datafield: 'date_handling', width: '10%'
                       
                        
                    },
                    { 
                        text: 'Số tiền đấu thầu',editable: true, datafield: 'amountItem', width: '10%'
                    },
//                    { 
//                        text: 'File đính kèm',editable: true, datafield: 'file_upload', width: '10%'
//                    }
                ]
//                    
        });
        
 //Get Print
         var dataPrintArray = new Array();
         
        $("#savePrint").click(function () {
                if(dataPrintArray.length == 0)
                {
                    bootbox.alert("Vui lòng chọn serial ấn chỉ! ");
                    return;
                }
                if (editrow >= 0) {
                     arraySave("array_print_handling",dataPrintArray,editrow);
                }
                $("#popupWindowPrint").jqxWindow('close'); 
        });
        //////
        var violation_id = new Array();
         
        $("#saveViolation").click(function () {
                if(violation_id.length == 0)
                {
                    bootbox.alert("Vui lòng chọn hành vi vi phạm! ");
                    return;
                }
                if (editrow >= 0) {
                    arraySave("violation_id",violation_id.toString(),editrow);
//                    dataIdViolation = violation_id;
                    var stringViolation;
                    $.ajax({
                            type:'post',
                            url:'<?php echo $this->baseUrl()?>/dafault/masterviolation/nameviolation',
                            data:{'data_id':violation_id},
                            async:false,
                            dataType:'json',
                            success:function(data){
                                stringViolation = data;
                            }
                    });
                    $("#jqxgrid").jqxGrid('setcellvalue', editrow, 'violation', stringViolation);
                }
                 $("#jqxgrid_itemsviolation").jqxGrid('clearselection');
                $("#popupWindowItemsviolation").jqxWindow('close'); 
        });
        /////
        
        var refreshDataPrint = function (data) {
            
        }   
        var sourcePrint =
        {
            datatype: "json",
            datafields:
            [
                {name: 'print_allocation_id',type:'int'},
                {name: 'master_print_id',type:'int'},
                {name: 'name_print',type:'string'},
                {name: 'serial', type:'string'}
            ],

            url:"<?php echo $this->baseUrl().'/dafault/docviolationshandling/secviceserialdepartmentmasterprint/id/'?>"+$("#jqxTree").val().id,//+sys_department_id,
                    //sortcolumn: 'order',
                    sortdirection: 'asc'
        };
        var dataAdapter2 = new $.jqx.dataAdapter(sourcePrint,{ uniqueDataFields: ['master_print_id'] });
      
        //dataAdapter3.dataBind();
//        var records = dataAdapter3.getGroupedRecords(['master_print_id','serial'],
//               , 'items', 'label'
//               [{ name: 'print_allocation_id', map: 'serial' }]);
     
        var getSourcePrintSerial = function (value,row) {
//        sourcePrint['master_print_id'] = {
//                      filtervalue: value
//                  };
//            var gridAdapter = new $.jqx.dataAdapter(sourcePrint);
//           return gridAdapter;
           
            //fields.push(name);
            //var dataAdapter = new $.jqx.dataAdapter(source, { autoBind: true, autoSort: true, uniqueDataFields: fields, autoSortField: name });
                var dataAdapter3 = new $.jqx.dataAdapter(sourcePrint,
                {
                    autoBind: true,
                    beforeLoadComplete: function (records) {
                           var data = new Array();
                        //var records = dataAdapter.records;
                        // get the length of the records array.
                        var length = records.length;
                        // loop through the records and display them in a table.

                        for (var i = 0; i < length; i++) {
                            var record = records[i];
                            //
                            
                            //
                            
                            
                            
                            
                            if(record.master_print_id == value)
                            {
                                ///
                                var dataarray = new Array();var defaultserial;
                                
                                    dataarray[0]={master_print_id:value,sys_department_id:$("#jqxTree").val().id,defaultserial:0};
                                var combobox = new Array();
                                $.ajax({
                                    type:'post',
                                    url:'<?php echo $this->baseUrl()?>/dafault/docviolationshandling/arrayserialcheckk',
                                    data:{'data':dataarray},
                                    async:false,
                                    dataType:'json',
                                    success:function(data){
                                        combobox = data;
                                    }
                                });
                                for(var j =0;j<combobox.length;j++){
                                    data.push({serialname : combobox[j] , printallocation: record.print_allocation_id});
                                }
                                ///
//                                data.push({serialname : record.serial , printallocation: record.print_allocation_id});
                            }
                        }
                        return data;
                    }
                });
                return dataAdapter3;
                       
        };
       
        $("#jqxgrid_print").jqxGrid(
            {
                width: '100%',
                
                source: dataAdapter2,
                theme: 'bootstrap',
                selectionmode: 'singlecell',
                editable: true,
                columns: [
                              { text: 'Tên ấn chỉ',editable: false, dataField: 'master_print_id',displayfield: 'name_print', width: '25%' }, 
                              { text: 'Serial xử phạt',editable: true, dataField: 'serialname',displayfield: 'serialname', width: '50%', columntype: 'custom',
                                   createeditor: function (row, cellvalue, editor, cellText, width, height) {
                                        var valuePrint = $("#jqxgrid_print").jqxGrid('getcellvalue', row, 'master_print_id');
                                        editor.jqxComboBox({ source: getSourcePrintSerial(valuePrint,row), width: width, height: height, displayMember: 'serialname', valueMember: 'printallocation',
                                                                                placeHolder: "Chọn serial:",})
                                    },
                                    geteditorvalue: function (row, cellvalue, editor) {
                                        // return the editor's value.
                                        var valuePrint = $("#jqxgrid_print").jqxGrid('getcellvalue', row, 'master_print_id');
                                        for(var i = dataPrintArray.length - 1; i >= 0; i--) {
                                                if(dataPrintArray[i]['master_print_id'] === valuePrint) {
                                                   //delete dataPrintArray[i];
                                                    dataPrintArray.splice(i, 1);
                                                }
                                            }
                                            
                                             var items = editor.jqxComboBox('getSelectedItem'); 
                                             if (items == null )
                                             {
                                                 return "";
                                             }
                                              var checkedItems = items.label;
                                              dataPrintArray.push({
                                                master_print_id: valuePrint,
                                                print_allocation_id:items.value,
                                                serialname: items.label,
                                                
                                            });
//                                        var items = editor.jqxDropDownList('getCheckedItems'); 
//                                        var checkedItems = "";
//                                        $.each(items, function (index) {
//                                            checkedItems += this.label + ", ";  
//                                            dataPrintArray.push({
//                                                master_print_id: valuePrint,
//                                                print_allocation_id:this.value,
//                                                serialname: this.label,
//                                                
//                                            });
//                                        });
                                        return checkedItems;
                                    }
                                

                              }
                              
                          ]
            }); 
            $("#btn_SaveAmount").click(function () {
                if (editrow >= 0) {
                    var value = $("#amount").val();
                    var reg = new RegExp('^[0-9]+$');
                   
                    if((!value || value.length === 0))
                    {
                        bootbox.alert("Vui lòng nhập số tiền phạt ! ");
                        return;
                    }
//                     if(!reg.test(value))
//                     {
//                         bootbox.alert("Vui lòng nhập đúng kiểu số ! ");
//                        return;
//                     }
                   
                        arraySave("amount",value,editrow);
                        //$("#amount").val("0")
                   
                }
                else
                {
                    bootbox.alert("Không tìm thấy dòng đang chỉnh sửa. Vui lòng chọn lại dòng chỉnh sửa ! ");
                }
                $('#popupWindowAmount').jqxWindow('close');
            });
   ///
   
    // prepare the data
            var source =
            {
                datatype: "json",
                datafields:
                [
                    { name: 'Idviolation',type:'int'},
                    { name: 'codeviolation', type: 'string' }, 
                    { name: 'nameviolation', type: 'string' },
                     { name: 'decreeviolation', type: 'string' },
                    { name: 'articleviolation', type: 'string' },
                    { name: 'clauseviolation',type: 'string'},
//                    { name: 'chon',type:'bool'}
                ],
                url:"<?php echo $this->baseUrl().'/dafault/masterviolation/serviceviolation'?>",
                //sortcolumn: 'orderviolation',
                //sortdirection: 'asc'
               
            };
         var dataAdapter = new $.jqx.dataAdapter(source, {
                loadComplete: function () {
                }
            });
            $("#jqxgrid_itemsviolation").jqxGrid(
            {
                width: '100%',
                source: dataAdapter,  
                theme: 'bootstrap',
                pageable: true,
                showfilterrow: true,
                filterable: true,
                autoheight: true,
                sortable: true,
                altrows: true,
                editable: true,
                enabletooltips: true,
//                selectionmode: 'singlerow',
                ready: function()
                {
                    // called when the Grid is loaded. Call methods or set properties here.         
                },
                selectionmode: 'checkbox',
//                altrows: true,
                columnsResize: true,
                rendergridrows: function (params) {
                    return params.data;
                },
                ready: function () {
                    $("#jqxgrid_itemsviolation").jqxGrid('hideColumn', 'Idviolation');
                },
                 rendertoolbar: function (toolbar) {
                    var me = this; var p =0;
                    var container = $("<div style='margin: 0px;'></div>");
                    toolbar.append(container);
                    container.append('<center><div id="t"></div></center>'); 
                 
//                     $("#jqxgrid_itemsviolation").bind('cellendedit', function (event) {
//                         var id = $("#jqxgrid_itemsviolation").jqxGrid('getrowid', 0); 
//                        var rowscount = $("#jqxgrid_itemsviolation").jqxGrid('getdatainformation').rowscount; 
//                        var p =0;
//                        for (var i = 0; i <= rowscount-1; i++) {
//                            var row = $('#jqxgrid_itemsviolation').jqxGrid('getRowData', i); 
//                            if(row.chon == 1){
//                                 var valueViolation = $("#jqxgrid_itemsviolation").jqxGrid('getcellvalue', row, 'Idviolation');
//                                  violation_id[p++]=valueViolation;
//                            }
//                        }
//                    });
                    $("#jqxgrid_itemsviolation").on('rowselect', function (event) {
                        var selectedrowindex = $("#jqxgrid_itemsviolation").jqxGrid('getselectedrowindex');
                        var row = $('#jqxgrid_itemsviolation').jqxGrid('getRowData', selectedrowindex);
                        var valueViolation = $("#jqxgrid_itemsviolation").jqxGrid('getcellvalue', row, 'Idviolation');
                        violation_id[p++]=valueViolation;
//                        alert(violation_id);
                    });
                    ////
                     // display unselected row index.
                    $("#jqxgrid_itemsviolation").on('rowunselect', function (event) {
                       var vitri=-1;
                       var valueViolation = $("#jqxgrid_itemsviolation").jqxGrid('getcellvalue', event.args.rowindex, 'Idviolation');
                      
                        for(var k =0;k<violation_id.length;k++){
                             if(violation_id[k]==valueViolation){
                                vitri = k;
                                break;
                            }
                        }
                        //xoa phan tu trong mang
                        violation_id.splice(vitri, 1);p--;
                        var arraytam = new Array();
                        for(var l =0;l<violation_id.length;l++){
                           if( violation_id[l]!=""){
                               arraytam.push(violation_id[l]);
                           }
                        }
                        violation_id = arraytam;
//                       alert(violation_id);
                       
                    });
                },
                columns: [
//                  { text: '',editable: true, dataField: 'chon',columntype: 'checkbox', width: '5%',
//                                    geteditorvalue: function (row, cellvalue, editor) {
//                                        // return the editor's value.
//                                        var valueViolation = $("#jqxgrid_print").jqxGrid('getcellvalue', row, 'Idviolation');
//                                              dataViolationArray.push({
//                                                Idviolation: valueViolation
//                                            });
//                                            return cellvalue;
//                                    }
//                              },
                  
                  { text: 'Tên hành vi vi pham',editable: false, dataField: 'nameviolation', width: '30%' },                 
                  { text: 'id',editable: false, dataField: 'Idviolation', width: '20%' }, 
                  { text: 'Nghị định', editable: false, dataField: 'decreeviolation', width: '25%' },
                  { text: 'Điều', editable: false, dataField: 'articleviolation', width: '20%' },
                  { text: 'Khoản', editable: false, dataField: 'clauseviolation', width: '20%' },

                ]
            });
});  
    </script> 
    <script>
    $('#master_sanction_id').on('change',function(){
        //lay gia tri combobox
//        alert($('#master_sanction_id :selected').text());
        if($('#master_sanction_id :selected').text()!= '(Tịch thu)-Đấu giá'){
            $('#amountItem').prop('readonly',true);
             $('#amountItem').val(0);
        }else{
            $('#amountItem').prop('readonly',false);
            $('#amountItem').val(<?php echo $this->item->getAmount(); ?>);
        }
        
    });

</script>
<script>
    function check(){
         if($('#master_items_id').val()== 0){
            bootbox.alert("Vui lòng chọn tang vật");
            return false;
        }
        if($('#serial_handling').val()==""){
            bootbox.alert("Vui lòng nhập biên lai");
            return false;
        }
        if($('#quantity_commodity').val()==""){
            bootbox.alert("Vui lòng nhập số lượng tang vật");
            return false;
        }
        if(isNaN($('#quantity_commodity').val())== true){
             bootbox.alert("Vui lòng nhập số lượng bằng số");
             return false;
        }
        if($('#master_unit_id').val()== 0){
            bootbox.alert("Vui lòng chọn đơn vị tang vật");
            return false;
        }
      if($('#master_sanction_id').val()== 0){
            bootbox.alert("Vui lòng chọn hình thức xử lý tang vật");
            return false;
        }  
      return true;              
    }
</script>
